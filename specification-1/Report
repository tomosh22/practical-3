So far...
NOTE: There are different versions of this program stored within multiple python files, to differentiate the files and
their versions, there are four objectives
NOTE: The files with the name prefix "BUILDING_" are python files in which the elements that make up this program
were first built and tested in, before being made apart of the main python file.
NOTE: The files with the name prefix "PATCHING_" are python files in which bugs were found in the main file, these
bugs are contained and separated within these files to be patched and then patched within the main file.


I have run into a new problem, that is, whenever I run the "ObjectivesMet4.py" which plots the punctuation, "comma"s return value
is incorrect this is evident because when this is ran on the text file I wrote, it returns 255 "commas" despite there
being only 1. Furthermore when this is run on the STAR WARS script it returns around 30,000 "commas" which is also wrong.
Interestingly, upon removing the "count" for "commas" the error then moves onto "fullstops". It looks like I'm going to
have to track this bug down and patch it for good. 255 to 30,000 "commas".
    Upon further investigation the bug has been tracked all the way back to version "ObjectivesMet2.py"
The first step is to determine is this problem also within the alphabet characters or only in the punctuation characters.
To determine this fact, I'll seperate the two into different arrays. Then check if the values for each element of each
array is correct. I'm hoping that the bug only persists within the punctuation characters.
    I "THINK" it is patched, two factors were incorrect. 1 ~ When I told the program to count spaces, it was not, this
is because I did not specify to count spaces, but instead to count "nothing". Essentially I put [count("")] instead of
[count(" ")] the latter is correct because I should be counting white spaces, not "nothing", or whatever that represents.
Secondly, when it comes to plotting, the visual graph itself relies on the order of names and order of integer values to
be, well, in order, such that when plotting data, the names and values are plotted seperately like so:
names = [column1, column2, column3,...] values = [14,15,16] the value 14 will be plotted with the name "column1", value
15 will be plotted with the name "column2" and so on, the data is plotted according to equal index values. What I was doing
wrong, was that, in my names array "space" came first, but in my values array "fullstops" came first, hence the number of
fullstops were being plotted for spaces.
    Therefore the "30,000 commas" value must have come about from "nothing" being counted instead of "spaces" and
combined with the "names" and "values" array being out of order it appeared that 30,000 commas were being counted, but in
fact 30,000 "nothing" were being counted and displayed under commas.

Very early I noticed that when it comes to counting the number of words, there is a slight inaccuracy, that is "right"
and "right." are identified as different words, when they shouldn't be. This is because the latter contains a full-stop.
As a result if a text file contained: "right right right." theInfoArray would return [["right", 2]["right.",1]]
Therefore I have to build an algorithm that goes through the words and removes or replaces any punctuation with, nothing.
So that when the words are counted a text file containing: "right right right." would return [["right",3]]
    Furthermore I should probably update the program to take in characters the same way words are accounted for, this
would ensure every single character is accounted for.
